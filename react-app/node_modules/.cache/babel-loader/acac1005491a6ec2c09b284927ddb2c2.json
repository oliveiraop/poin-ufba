{"ast":null,"code":"var _jsxFileName = \"/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/MenuContent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Menu, Grid } from \"antd\";\nimport IntlMessage from \"../util-components/IntlMessage\";\nimport Icon from \"../util-components/Icon\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { connect } from \"react-redux\";\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\nimport utils from 'utils';\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  SubMenu\n} = Menu;\nconst {\n  useBreakpoint\n} = Grid;\n\nconst setLocale = (isLocaleOn, localeKey) => isLocaleOn ? /*#__PURE__*/_jsxDEV(IntlMessage, {\n  id: localeKey\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 16\n}, this) : localeKey.toString();\n\nconst setDefaultOpen = key => {\n  let keyList = [];\n  let keyString = \"\";\n\n  if (key) {\n    const arr = key.split(\"-\");\n\n    for (let index = 0; index < arr.length; index++) {\n      const elm = arr[index];\n      index === 0 ? keyString = elm : keyString = `${keyString}-${elm}`;\n      keyList.push(keyString);\n    }\n  }\n\n  return keyList;\n};\n\nconst SideNavContent = props => {\n  _s();\n\n  const {\n    sideNavTheme,\n    routeInfo,\n    hideGroupTitle,\n    localization,\n    onMobileNavToggle\n  } = props;\n  const isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg');\n\n  const closeMobileNav = () => {\n    if (isMobile) {\n      onMobileNavToggle(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    theme: sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\",\n    mode: \"inline\",\n    style: {\n      height: \"100%\",\n      borderRight: 0\n    },\n    defaultSelectedKeys: [routeInfo === null || routeInfo === void 0 ? void 0 : routeInfo.key],\n    defaultOpenKeys: setDefaultOpen(routeInfo === null || routeInfo === void 0 ? void 0 : routeInfo.key),\n    className: hideGroupTitle ? \"hide-group-title\" : \"\",\n    children: navigationConfig.map(menu => menu.submenu.length > 0 ? /*#__PURE__*/_jsxDEV(Menu.ItemGroup, {\n      title: setLocale(localization, menu.title),\n      children: menu.submenu.map(subMenuFirst => subMenuFirst.submenu.length > 0 ? /*#__PURE__*/_jsxDEV(SubMenu, {\n        icon: subMenuFirst.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n          type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 23\n        }, this) : null,\n        title: setLocale(localization, subMenuFirst.title),\n        children: subMenuFirst.submenu.map(subMenuSecond => /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [subMenuSecond.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n            type: subMenuSecond === null || subMenuSecond === void 0 ? void 0 : subMenuSecond.icon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n            children: setLocale(localization, subMenuSecond.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            onClick: () => closeMobileNav(),\n            to: subMenuSecond.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this)]\n        }, subMenuSecond.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this))\n      }, subMenuFirst.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: [subMenuFirst.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n          type: subMenuFirst.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 40\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: setLocale(localization, subMenuFirst.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          onClick: () => closeMobileNav(),\n          to: subMenuFirst.path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 19\n        }, this)]\n      }, subMenuFirst.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this))\n    }, menu.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: [menu.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n        type: menu === null || menu === void 0 ? void 0 : menu.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: setLocale(localization, menu === null || menu === void 0 ? void 0 : menu.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this), menu.path ? /*#__PURE__*/_jsxDEV(Link, {\n        onClick: () => closeMobileNav(),\n        to: menu.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 26\n      }, this) : null]\n    }, menu.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SideNavContent, \"wrTyyaVXVdJHveNiBVLXF/kEkkM=\", false, function () {\n  return [useBreakpoint];\n});\n\n_c = SideNavContent;\n\nconst TopNavContent = props => {\n  const {\n    topNavColor,\n    localization\n  } = props;\n  return /*#__PURE__*/_jsxDEV(Menu, {\n    mode: \"horizontal\",\n    style: {\n      backgroundColor: topNavColor\n    },\n    children: navigationConfig.map(menu => menu.submenu.length > 0 ? /*#__PURE__*/_jsxDEV(SubMenu, {\n      popupClassName: \"top-nav-menu\",\n      title: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [menu.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n          type: menu === null || menu === void 0 ? void 0 : menu.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 30\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: setLocale(localization, menu.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 15\n      }, this),\n      children: menu.submenu.map(subMenuFirst => subMenuFirst.submenu.length > 0 ? /*#__PURE__*/_jsxDEV(SubMenu, {\n        icon: subMenuFirst.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n          type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 23\n        }, this) : null,\n        title: setLocale(localization, subMenuFirst.title),\n        children: subMenuFirst.submenu.map(subMenuSecond => /*#__PURE__*/_jsxDEV(Menu.Item, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: setLocale(localization, subMenuSecond.title)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: subMenuSecond.path\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 23\n          }, this)]\n        }, subMenuSecond.key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this))\n      }, subMenuFirst.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this) : /*#__PURE__*/_jsxDEV(Menu.Item, {\n        children: [subMenuFirst.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n          type: subMenuFirst === null || subMenuFirst === void 0 ? void 0 : subMenuFirst.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n          children: setLocale(localization, subMenuFirst.title)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: subMenuFirst.path\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }, this)]\n      }, subMenuFirst.key, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this))\n    }, menu.key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Menu.Item, {\n      children: [menu.icon ? /*#__PURE__*/_jsxDEV(Icon, {\n        type: menu === null || menu === void 0 ? void 0 : menu.icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 26\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: setLocale(localization, menu === null || menu === void 0 ? void 0 : menu.title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }, this), menu.path ? /*#__PURE__*/_jsxDEV(Link, {\n        to: menu.path\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 26\n      }, this) : null]\n    }, menu.key, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = TopNavContent;\n\nconst MenuContent = props => {\n  return props.type === NAV_TYPE_SIDE ? /*#__PURE__*/_jsxDEV(SideNavContent, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(TopNavContent, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = MenuContent;\n\nconst mapStateToProps = _ref => {\n  let {\n    theme\n  } = _ref;\n  const {\n    sideNavTheme,\n    topNavColor\n  } = theme;\n  return {\n    sideNavTheme,\n    topNavColor\n  };\n};\n\nexport default connect(mapStateToProps, {\n  onMobileNavToggle\n})(MenuContent);\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SideNavContent\");\n$RefreshReg$(_c2, \"TopNavContent\");\n$RefreshReg$(_c3, \"MenuContent\");","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/MenuContent.js"],"names":["React","Link","Menu","Grid","IntlMessage","Icon","navigationConfig","connect","SIDE_NAV_LIGHT","NAV_TYPE_SIDE","utils","onMobileNavToggle","SubMenu","useBreakpoint","setLocale","isLocaleOn","localeKey","toString","setDefaultOpen","key","keyList","keyString","arr","split","index","length","elm","push","SideNavContent","props","sideNavTheme","routeInfo","hideGroupTitle","localization","isMobile","getBreakPoint","includes","closeMobileNav","height","borderRight","map","menu","submenu","title","subMenuFirst","icon","subMenuSecond","path","TopNavContent","topNavColor","backgroundColor","MenuContent","type","mapStateToProps","theme"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Menu, Grid } from \"antd\";\r\nimport IntlMessage from \"../util-components/IntlMessage\";\r\nimport Icon from \"../util-components/Icon\";\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { connect } from \"react-redux\";\r\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE } from \"constants/ThemeConstant\";\r\nimport utils from 'utils'\r\nimport { onMobileNavToggle } from \"redux/actions/Theme\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { useBreakpoint } = Grid;\r\n\r\nconst setLocale = (isLocaleOn, localeKey) =>\r\n  isLocaleOn ? <IntlMessage id={localeKey} /> : localeKey.toString();\r\n\r\nconst setDefaultOpen = (key) => {\r\n  let keyList = [];\r\n  let keyString = \"\";\r\n  if (key) {\r\n    const arr = key.split(\"-\");\r\n    for (let index = 0; index < arr.length; index++) {\r\n      const elm = arr[index];\r\n      index === 0 ? (keyString = elm) : (keyString = `${keyString}-${elm}`);\r\n      keyList.push(keyString);\r\n    }\r\n  }\r\n  return keyList;\r\n};\r\n\r\nconst SideNavContent = (props) => {\r\n\tconst { sideNavTheme, routeInfo, hideGroupTitle, localization, onMobileNavToggle } = props;\r\n\tconst isMobile = !utils.getBreakPoint(useBreakpoint()).includes('lg')\r\n\tconst closeMobileNav = () => {\r\n\t\tif (isMobile) {\r\n\t\t\tonMobileNavToggle(false)\r\n\t\t}\r\n\t}\r\n  return (\r\n    <Menu\r\n      theme={sideNavTheme === SIDE_NAV_LIGHT ? \"light\" : \"dark\"}\r\n      mode=\"inline\"\r\n      style={{ height: \"100%\", borderRight: 0 }}\r\n      defaultSelectedKeys={[routeInfo?.key]}\r\n      defaultOpenKeys={setDefaultOpen(routeInfo?.key)}\r\n      className={hideGroupTitle ? \"hide-group-title\" : \"\"}\r\n    >\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <Menu.ItemGroup\r\n            key={menu.key}\r\n            title={setLocale(localization, menu.title)}\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  key={subMenuFirst.key}\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      {subMenuSecond.icon ? (\r\n                        <Icon type={subMenuSecond?.icon} />\r\n                      ) : null}\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link onClick={() => closeMobileNav()} to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? <Icon type={subMenuFirst.icon} /> : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link onClick={() => closeMobileNav()} to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </Menu.ItemGroup>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link onClick={() => closeMobileNav()} to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst TopNavContent = (props) => {\r\n  const { topNavColor, localization } = props;\r\n  return (\r\n    <Menu mode=\"horizontal\" style={{ backgroundColor: topNavColor }}>\r\n      {navigationConfig.map((menu) =>\r\n        menu.submenu.length > 0 ? (\r\n          <SubMenu\r\n            key={menu.key}\r\n            popupClassName=\"top-nav-menu\"\r\n            title={\r\n              <span>\r\n                {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n                <span>{setLocale(localization, menu.title)}</span>\r\n              </span>\r\n            }\r\n          >\r\n            {menu.submenu.map((subMenuFirst) =>\r\n              subMenuFirst.submenu.length > 0 ? (\r\n                <SubMenu\r\n                  key={subMenuFirst.key}\r\n                  icon={\r\n                    subMenuFirst.icon ? (\r\n                      <Icon type={subMenuFirst?.icon} />\r\n                    ) : null\r\n                  }\r\n                  title={setLocale(localization, subMenuFirst.title)}\r\n                >\r\n                  {subMenuFirst.submenu.map((subMenuSecond) => (\r\n                    <Menu.Item key={subMenuSecond.key}>\r\n                      <span>\r\n                        {setLocale(localization, subMenuSecond.title)}\r\n                      </span>\r\n                      <Link to={subMenuSecond.path} />\r\n                    </Menu.Item>\r\n                  ))}\r\n                </SubMenu>\r\n              ) : (\r\n                <Menu.Item key={subMenuFirst.key}>\r\n                  {subMenuFirst.icon ? (\r\n                    <Icon type={subMenuFirst?.icon} />\r\n                  ) : null}\r\n                  <span>{setLocale(localization, subMenuFirst.title)}</span>\r\n                  <Link to={subMenuFirst.path} />\r\n                </Menu.Item>\r\n              )\r\n            )}\r\n          </SubMenu>\r\n        ) : (\r\n          <Menu.Item key={menu.key}>\r\n            {menu.icon ? <Icon type={menu?.icon} /> : null}\r\n            <span>{setLocale(localization, menu?.title)}</span>\r\n            {menu.path ? <Link to={menu.path} /> : null}\r\n          </Menu.Item>\r\n        )\r\n      )}\r\n    </Menu>\r\n  );\r\n};\r\n\r\nconst MenuContent = (props) => {\r\n  return props.type === NAV_TYPE_SIDE ? (\r\n    <SideNavContent {...props} />\r\n  ) : (\r\n    <TopNavContent {...props} />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { sideNavTheme, topNavColor } = theme;\r\n  return { sideNavTheme, topNavColor };\r\n};\r\n\r\nexport default connect(mapStateToProps, { onMobileNavToggle })(MenuContent);\r\n"]},"metadata":{},"sourceType":"module"}