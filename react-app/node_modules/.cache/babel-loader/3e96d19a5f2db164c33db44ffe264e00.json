{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction findCommentNode(comment) {\n  var head = document.head;\n\n  for (var i = 0; i < head.childNodes.length; i++) {\n    var _node$nodeValue;\n\n    var node = head.childNodes[i];\n\n    if (node.nodeType === 8 && (node === null || node === void 0 ? void 0 : (_node$nodeValue = node.nodeValue) === null || _node$nodeValue === void 0 ? void 0 : _node$nodeValue.trim()) === comment) {\n      return node;\n    }\n  }\n\n  return null;\n}\n\nfunction arrayToObject(array) {\n  var obj = {};\n  array.forEach(function (el) {\n    return obj[el] = el;\n  });\n  return obj;\n}\n\nfunction createLinkElement(attributes) {\n  var linkElement = document.createElement('link');\n\n  for (var _i = 0, _Object$entries = Object.entries(attributes); _i < _Object$entries.length; _i++) {\n    var _Object$entries$_i = _Object$entries[_i],\n        attribute = _Object$entries$_i[0],\n        value = _Object$entries$_i[1];\n\n    if (attribute === 'onload') {\n      linkElement.onload = attributes.onload;\n      continue;\n    } // @ts-ignore\n\n\n    linkElement[attribute] = value;\n  }\n\n  return linkElement;\n}\n\nvar Status;\n\n(function (Status) {\n  Status[\"idle\"] = \"idle\";\n  Status[\"loading\"] = \"loading\";\n  Status[\"loaded\"] = \"loaded\";\n})(Status || (Status = {}));\n\nvar ThemeSwitcherContext = /*#__PURE__*/React.createContext(undefined);\n\nfunction ThemeSwitcherProvider(_ref) {\n  var themeMap = _ref.themeMap,\n      insertionPoint = _ref.insertionPoint,\n      defaultTheme = _ref.defaultTheme,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? 'current-theme-style' : _ref$id,\n      _ref$attr = _ref.attr,\n      attr = _ref$attr === void 0 ? 'data-theme' : _ref$attr,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"themeMap\", \"insertionPoint\", \"defaultTheme\", \"id\", \"attr\"]);\n\n  var _React$useState = React.useState(Status.idle),\n      status = _React$useState[0],\n      setStatus = _React$useState[1];\n\n  var _React$useState2 = React.useState(),\n      currentTheme = _React$useState2[0],\n      setCurrentTheme = _React$useState2[1];\n\n  var insertStyle = React.useCallback(function (linkElement) {\n    if (insertionPoint) {\n      var insertionPointElement = findCommentNode(insertionPoint);\n\n      if (!insertionPointElement) {\n        console.warn(\"Insertion point '\" + insertionPoint + \"' does not exist. Be sure to add comment on head and that it matches the insertionPoint\");\n        return document.head.appendChild(linkElement);\n      }\n\n      var parentNode = insertionPointElement.parentNode;\n\n      if (parentNode) {\n        return parentNode.insertBefore(linkElement, insertionPointElement.nextSibling);\n      }\n    } else {\n      return document.head.appendChild(linkElement);\n    }\n  }, [insertionPoint]);\n  var switcher = React.useCallback(function (_ref2) {\n    var theme = _ref2.theme;\n    if (theme === currentTheme) return;\n    var previousStyle = document.getElementById(id);\n\n    if (previousStyle) {\n      previousStyle.remove();\n    }\n\n    if (themeMap[theme]) {\n      setStatus(Status.loading);\n      var linkElement = createLinkElement({\n        type: 'text/css',\n        rel: 'stylesheet',\n        id: id,\n        href: themeMap[theme],\n        onload: function onload() {\n          setStatus(Status.loaded);\n        }\n      });\n      insertStyle(linkElement);\n      setCurrentTheme(theme);\n    } else {\n      return console.warn('Could not find specified theme');\n    }\n\n    document.body.setAttribute(attr, theme);\n  }, [themeMap, insertStyle, attr, id, currentTheme]);\n  React.useEffect(function () {\n    if (defaultTheme) {\n      switcher({\n        theme: defaultTheme\n      });\n    }\n  }, [defaultTheme]);\n  React.useEffect(function () {\n    var themes = Object.keys(themeMap);\n    themes.map(function (theme) {\n      var themeAssetId = \"theme-prefetch-\" + theme;\n\n      if (!document.getElementById(themeAssetId)) {\n        var stylePrefetch = document.createElement('link');\n        stylePrefetch.rel = 'prefetch';\n        stylePrefetch.type = 'text/css';\n        stylePrefetch.id = themeAssetId;\n        stylePrefetch.href = themeMap[theme];\n        insertStyle(stylePrefetch);\n      }\n\n      return '';\n    });\n  }, [themeMap, insertStyle]);\n  var value = React.useMemo(function () {\n    return {\n      switcher: switcher,\n      status: status,\n      currentTheme: currentTheme,\n      themes: arrayToObject(Object.keys(themeMap))\n    };\n  }, [switcher, status, currentTheme, themeMap]);\n  return React.createElement(ThemeSwitcherContext.Provider, Object.assign({\n    value: value\n  }, rest));\n}\n\nfunction useThemeSwitcher() {\n  var context = React.useContext(ThemeSwitcherContext);\n\n  if (!context) {\n    throw new Error('To use `useThemeSwitcher`, component must be within a ThemeSwitcherProvider');\n  }\n\n  return context;\n}\n\nexports.ThemeSwitcherProvider = ThemeSwitcherProvider;\nexports.useThemeSwitcher = useThemeSwitcher;","map":{"version":3,"sources":["../src/utils.ts","../src/index.tsx"],"names":["findCommentNode","comment","head","document","i","node","arrayToObject","array","obj","createLinkElement","attributes","linkElement","attribute","value","Object","Status","ThemeSwitcherContext","React","ThemeSwitcherProvider","themeMap","insertionPoint","defaultTheme","id","attr","rest","status","setStatus","currentTheme","setCurrentTheme","insertStyle","insertionPointElement","console","parentNode","switcher","theme","previousStyle","type","rel","href","onload","themes","themeAssetId","stylePrefetch","useThemeSwitcher","context"],"mappings":"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","sourcesContent":["export function findCommentNode(comment: string) {\n  const head = document.head;\n  for (let i = 0; i < head.childNodes.length; i++) {\n    const node = head.childNodes[i];\n    if (node.nodeType === 8 && node?.nodeValue?.trim() === comment) {\n      return node;\n    }\n  }\n  return null;\n}\n\nexport function arrayToObject(array: string[]): Record<any, string> {\n  const obj: Record<any, string> = {};\n  array.forEach(el => (obj[el] = el));\n  return obj;\n}\n\nexport function createLinkElement(attributes: Record<string, any>) {\n  const linkElement = document.createElement('link');\n\n  for (const [attribute, value] of Object.entries(attributes)) {\n    if (attribute === 'onload') {\n      linkElement.onload = attributes.onload;\n      continue;\n    }\n\n    // @ts-ignore\n    linkElement[attribute] = value;\n  }\n\n  return linkElement;\n}\n","import * as React from 'react';\nimport { findCommentNode, arrayToObject, createLinkElement } from './utils';\n\nenum Status {\n  idle = 'idle',\n  loading = 'loading',\n  loaded = 'loaded',\n}\n\ninterface IThemeSwitcherContext {\n  currentTheme: string | undefined;\n  themes: Record<any, string>;\n  switcher: ({ theme }: { theme: string }) => void;\n  status: Status;\n}\n\nconst ThemeSwitcherContext = React.createContext<\n  IThemeSwitcherContext | undefined\n>(undefined);\n\ninterface Props {\n  themeMap: Record<any, string>;\n  children?: React.ReactNode;\n  insertionPoint?: string;\n  id?: string;\n  defaultTheme?: string;\n  attr?: string;\n}\n\nexport function ThemeSwitcherProvider({\n  themeMap,\n  insertionPoint,\n  defaultTheme,\n  id = 'current-theme-style',\n  attr = 'data-theme',\n  ...rest\n}: Props) {\n  const [status, setStatus] = React.useState<Status>(Status.idle);\n  const [currentTheme, setCurrentTheme] = React.useState<string>();\n\n  const insertStyle = React.useCallback(\n    (linkElement: HTMLElement): HTMLElement | void => {\n      if (insertionPoint) {\n        const insertionPointElement = findCommentNode(insertionPoint);\n\n        if (!insertionPointElement) {\n          console.warn(\n            `Insertion point '${insertionPoint}' does not exist. Be sure to add comment on head and that it matches the insertionPoint`\n          );\n          return document.head.appendChild(linkElement);\n        }\n\n        const { parentNode } = insertionPointElement;\n        if (parentNode) {\n          return parentNode.insertBefore(\n            linkElement,\n            insertionPointElement.nextSibling\n          );\n        }\n      } else {\n        return document.head.appendChild(linkElement);\n      }\n    },\n    [insertionPoint]\n  );\n\n  const switcher = React.useCallback(\n    ({ theme }: { theme: string }) => {\n      if (theme === currentTheme) return;\n\n      const previousStyle = document.getElementById(id);\n      if (previousStyle) {\n        previousStyle.remove();\n      }\n\n      if (themeMap[theme]) {\n        setStatus(Status.loading);\n\n        const linkElement = createLinkElement({\n          type: 'text/css',\n          rel: 'stylesheet',\n          id: id,\n          href: themeMap[theme],\n          onload: () => {\n            setStatus(Status.loaded);\n          },\n        });\n\n        insertStyle(linkElement);\n        setCurrentTheme(theme);\n      } else {\n        return console.warn('Could not find specified theme');\n      }\n\n      document.body.setAttribute(attr, theme);\n    },\n    [themeMap, insertStyle, attr, id, currentTheme]\n  );\n\n  React.useEffect(() => {\n    if (defaultTheme) {\n      switcher({ theme: defaultTheme });\n    }\n  }, [defaultTheme]);\n\n  React.useEffect(() => {\n    const themes = Object.keys(themeMap);\n\n    themes.map(theme => {\n      const themeAssetId = `theme-prefetch-${theme}`;\n      if (!document.getElementById(themeAssetId)) {\n        const stylePrefetch = document.createElement('link');\n        stylePrefetch.rel = 'prefetch';\n        stylePrefetch.type = 'text/css';\n        stylePrefetch.id = themeAssetId;\n        stylePrefetch.href = themeMap[theme];\n\n        insertStyle(stylePrefetch);\n      }\n      return '';\n    });\n  }, [themeMap, insertStyle]);\n\n  const value = React.useMemo(\n    () => ({\n      switcher,\n      status,\n      currentTheme,\n      themes: arrayToObject(Object.keys(themeMap)),\n    }),\n    [switcher, status, currentTheme, themeMap]\n  );\n\n  return <ThemeSwitcherContext.Provider value={value} {...rest} />;\n}\n\nexport function useThemeSwitcher() {\n  const context = React.useContext(ThemeSwitcherContext);\n  if (!context) {\n    throw new Error(\n      'To use `useThemeSwitcher`, component must be within a ThemeSwitcherProvider'\n    );\n  }\n  return context;\n}\n"]},"metadata":{},"sourceType":"script"}