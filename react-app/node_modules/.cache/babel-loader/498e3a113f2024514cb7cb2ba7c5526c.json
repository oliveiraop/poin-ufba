{"ast":null,"code":"var _jsxFileName = \"/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/layouts/app-layout/index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport SideNav from 'components/layout-components/SideNav';\nimport TopNav from 'components/layout-components/TopNav';\nimport Loading from 'components/shared-components/Loading';\nimport MobileNav from 'components/layout-components/MobileNav';\nimport HeaderNav from 'components/layout-components/HeaderNav';\nimport PageHeader from 'components/layout-components/PageHeader';\nimport Footer from 'components/layout-components/Footer';\nimport AppViews from 'views/app-views';\nimport { Layout, Grid } from \"antd\";\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { SIDE_NAV_WIDTH, SIDE_NAV_COLLAPSED_WIDTH, NAV_TYPE_SIDE, NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport utils from 'utils';\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Content\n} = Layout;\nconst {\n  useBreakpoint\n} = Grid;\nexport const AppLayout = _ref => {\n  _s();\n\n  let {\n    navCollapsed,\n    navType,\n    location\n  } = _ref;\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname);\n  const screens = utils.getBreakPoint(useBreakpoint());\n  const isMobile = !screens.includes('lg');\n  const isNavSide = navType === NAV_TYPE_SIDE;\n  const isNavTop = navType === NAV_TYPE_TOP;\n\n  const getLayoutGutter = () => {\n    if (isNavTop || isMobile) {\n      return 0;\n    }\n\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH;\n  };\n\n  const {\n    status\n  } = useThemeSwitcher();\n\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      cover: \"page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(HeaderNav, {\n      isMobile: isMobile\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), isNavTop && !isMobile ? /*#__PURE__*/_jsxDEV(TopNav, {\n      routeInfo: currentRouteInfo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 34\n    }, this) : null, /*#__PURE__*/_jsxDEV(Layout, {\n      className: \"app-container\",\n      children: [isNavSide && !isMobile ? /*#__PURE__*/_jsxDEV(SideNav, {\n        routeInfo: currentRouteInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }, this) : null, /*#__PURE__*/_jsxDEV(Layout, {\n        className: \"app-layout\",\n        style: {\n          paddingLeft: getLayoutGutter()\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `app-content ${isNavTop ? 'layout-top-nav' : ''}`,\n          children: [/*#__PURE__*/_jsxDEV(PageHeader, {\n            display: currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.breadcrumb,\n            title: currentRouteInfo === null || currentRouteInfo === void 0 ? void 0 : currentRouteInfo.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Content, {\n            children: /*#__PURE__*/_jsxDEV(AppViews, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isMobile && /*#__PURE__*/_jsxDEV(MobileNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AppLayout, \"Ku5/KEPoucZcrlOWbNH9h7MQzdQ=\", false, function () {\n  return [useBreakpoint, useThemeSwitcher];\n});\n\n_c = AppLayout;\n\nconst mapStateToProps = _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  const {\n    navCollapsed,\n    navType,\n    locale\n  } = theme;\n  return {\n    navCollapsed,\n    navType,\n    locale\n  };\n};\n\nexport default connect(mapStateToProps)( /*#__PURE__*/React.memo(AppLayout));\n\nvar _c;\n\n$RefreshReg$(_c, \"AppLayout\");","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/layouts/app-layout/index.js"],"names":["React","connect","SideNav","TopNav","Loading","MobileNav","HeaderNav","PageHeader","Footer","AppViews","Layout","Grid","navigationConfig","SIDE_NAV_WIDTH","SIDE_NAV_COLLAPSED_WIDTH","NAV_TYPE_SIDE","NAV_TYPE_TOP","utils","useThemeSwitcher","Content","useBreakpoint","AppLayout","navCollapsed","navType","location","currentRouteInfo","getRouteInfo","pathname","screens","getBreakPoint","isMobile","includes","isNavSide","isNavTop","getLayoutGutter","status","paddingLeft","breadcrumb","title","mapStateToProps","theme","locale","memo"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport SideNav from 'components/layout-components/SideNav';\r\nimport TopNav from 'components/layout-components/TopNav';\r\nimport Loading from 'components/shared-components/Loading';\r\nimport MobileNav from 'components/layout-components/MobileNav'\r\nimport HeaderNav from 'components/layout-components/HeaderNav';\r\nimport PageHeader from 'components/layout-components/PageHeader';\r\nimport Footer from 'components/layout-components/Footer';\r\nimport AppViews from 'views/app-views';\r\nimport {\r\n  Layout,\r\n  Grid,\r\n} from \"antd\";\r\n\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\nimport { \r\n  SIDE_NAV_WIDTH, \r\n  SIDE_NAV_COLLAPSED_WIDTH,\r\n  NAV_TYPE_SIDE,\r\n  NAV_TYPE_TOP\r\n} from 'constants/ThemeConstant';\r\nimport utils from 'utils';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nconst { Content } = Layout;\r\nconst { useBreakpoint } = Grid;\r\n\r\nexport const AppLayout = ({ navCollapsed, navType, location }) => {\r\n  const currentRouteInfo = utils.getRouteInfo(navigationConfig, location.pathname)\r\n  const screens = utils.getBreakPoint(useBreakpoint());\r\n  const isMobile = !screens.includes('lg')\r\n  const isNavSide = navType === NAV_TYPE_SIDE\r\n  const isNavTop = navType === NAV_TYPE_TOP\r\n  const getLayoutGutter = () => {\r\n    if(isNavTop || isMobile) {\r\n      return 0\r\n    }\r\n    return navCollapsed ? SIDE_NAV_COLLAPSED_WIDTH : SIDE_NAV_WIDTH\r\n  }\r\n\r\n  const { status } = useThemeSwitcher();\r\n\r\n  if (status === 'loading') {\r\n    return <Loading cover=\"page\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <HeaderNav isMobile={isMobile}/>\r\n      {(isNavTop && !isMobile) ? <TopNav routeInfo={currentRouteInfo}/> : null}\r\n      <Layout className=\"app-container\">\r\n        {(isNavSide && !isMobile) ? <SideNav routeInfo={currentRouteInfo}/> : null }\r\n        <Layout className=\"app-layout\" style={{paddingLeft: getLayoutGutter()}}>\r\n          <div className={`app-content ${isNavTop ? 'layout-top-nav' : ''}`}>\r\n            <PageHeader display={currentRouteInfo?.breadcrumb} title={currentRouteInfo?.title} />\r\n            <Content>\r\n              <AppViews />\r\n            </Content>\r\n          </div>\r\n          <Footer />\r\n        </Layout>\r\n      </Layout>\r\n      {isMobile && <MobileNav />}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navCollapsed, navType, locale } =  theme;\r\n  return { navCollapsed, navType, locale }\r\n};\r\n\r\nexport default connect(mapStateToProps)(React.memo(AppLayout));"]},"metadata":{},"sourceType":"module"}