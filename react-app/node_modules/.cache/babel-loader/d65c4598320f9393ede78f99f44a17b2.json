{"ast":null,"code":"var _jsxFileName = \"/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/NavSearch/SearchInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { DashboardOutlined, AppstoreOutlined, AntDesignOutlined, FileTextOutlined, SearchOutlined } from '@ant-design/icons';\nimport { Link } from \"react-router-dom\";\nimport { AutoComplete, Input } from 'antd';\nimport IntlMessage from 'components/util-components/IntlMessage';\nimport navigationConfig from \"configs/NavigationConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction getOptionList(navigationTree, optionTree) {\n  optionTree = optionTree ? optionTree : [];\n\n  for (const navItem of navigationTree) {\n    if (navItem.submenu.length === 0) {\n      optionTree.push(navItem);\n    }\n\n    if (navItem.submenu.length > 0) {\n      getOptionList(navItem.submenu, optionTree);\n    }\n  }\n\n  return optionTree;\n}\n\nconst optionList = getOptionList(navigationConfig);\n\nconst getCategoryIcon = category => {\n  switch (category) {\n    case 'dashboards':\n      return /*#__PURE__*/_jsxDEV(DashboardOutlined, {\n        className: \"text-success\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n\n    case 'apps':\n      return /*#__PURE__*/_jsxDEV(AppstoreOutlined, {\n        className: \"text-danger\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this);\n\n    case 'components':\n      return /*#__PURE__*/_jsxDEV(AntDesignOutlined, {\n        className: \"text-primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this);\n\n    case 'extra':\n      return /*#__PURE__*/_jsxDEV(FileTextOutlined, {\n        className: \"text-warning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this);\n\n    default:\n      return null;\n  }\n};\n\nconst searchResult = () => optionList.map(item => {\n  const category = item.key.split('-')[0];\n  return {\n    value: item.path,\n    label: /*#__PURE__*/_jsxDEV(Link, {\n      to: item.path,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-list-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"icon\",\n          children: getCategoryIcon(category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-weight-semibold\",\n            children: /*#__PURE__*/_jsxDEV(IntlMessage, {\n              id: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-size-sm text-muted\",\n            children: [category, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)\n  };\n});\n\nconst SearchInput = props => {\n  _s();\n\n  const {\n    active,\n    close,\n    isMobile,\n    mode\n  } = props;\n  const [value, setValue] = useState('');\n  const [options, setOptions] = useState([]);\n  const inputRef = useRef(null);\n\n  const onSelect = () => {\n    setValue('');\n    setOptions([]);\n\n    if (close) {\n      close();\n    }\n  };\n\n  const onSearch = searchText => {\n    setValue(searchText);\n    setOptions(!searchText ? [] : searchResult(searchText));\n  };\n\n  const autofocus = () => {\n    inputRef.current.focus();\n  };\n\n  if (active) {\n    autofocus();\n  }\n\n  return /*#__PURE__*/_jsxDEV(AutoComplete, {\n    ref: inputRef,\n    className: `nav-search-input ${isMobile ? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`,\n    dropdownClassName: \"nav-search-dropdown\",\n    options: options,\n    onSelect: onSelect,\n    onSearch: onSearch,\n    value: value,\n    filterOption: (inputValue, option) => option.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1,\n    children: /*#__PURE__*/_jsxDEV(Input, {\n      placeholder: \"Search...\",\n      prefix: /*#__PURE__*/_jsxDEV(SearchOutlined, {\n        className: \"mr-0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SearchInput, \"R2uGb1aoQM5giKPnQVzJauDWT+Y=\");\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/NavSearch/SearchInput.js"],"names":["React","useState","useRef","DashboardOutlined","AppstoreOutlined","AntDesignOutlined","FileTextOutlined","SearchOutlined","Link","AutoComplete","Input","IntlMessage","navigationConfig","getOptionList","navigationTree","optionTree","navItem","submenu","length","push","optionList","getCategoryIcon","category","searchResult","map","item","key","split","value","path","label","title","SearchInput","props","active","close","isMobile","mode","setValue","options","setOptions","inputRef","onSelect","onSearch","searchText","autofocus","current","focus","inputValue","option","toUpperCase","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { \r\n\tDashboardOutlined,\r\n\tAppstoreOutlined,\r\n\tAntDesignOutlined,\r\n\tFileTextOutlined,\r\n\tSearchOutlined\r\n} from '@ant-design/icons';\r\nimport { Link } from \"react-router-dom\";\r\nimport { AutoComplete, Input } from 'antd';\r\nimport IntlMessage from 'components/util-components/IntlMessage';\r\nimport navigationConfig from \"configs/NavigationConfig\";\r\n\r\nfunction getOptionList (navigationTree, optionTree) {\r\n\toptionTree = optionTree ? optionTree : [];\r\n\tfor ( const navItem of navigationTree ) {\r\n\t\tif(navItem.submenu.length === 0) {\r\n\t\t\toptionTree.push(navItem)\r\n\t\t}\r\n\t\tif(navItem.submenu.length > 0) {\r\n\t\t\tgetOptionList(navItem.submenu, optionTree);\r\n\t\t}\r\n\t}\r\n\treturn optionTree \r\n}\r\n\r\nconst optionList = getOptionList(navigationConfig)\r\n\r\nconst getCategoryIcon = category => {\r\n\tswitch (category) {\r\n\t\tcase 'dashboards':\r\n\t\t\treturn <DashboardOutlined className=\"text-success\"/>;\r\n\t\tcase 'apps':\r\n\t\t\treturn <AppstoreOutlined className=\"text-danger\"/>;\r\n\t\tcase 'components':\r\n\t\t\treturn <AntDesignOutlined className=\"text-primary\"/>;\r\n\t\tcase 'extra':\r\n\t\t\treturn <FileTextOutlined className=\"text-warning\"/>;\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nconst searchResult = () => optionList.map((item) => {\r\n\tconst category = item.key.split('-')[0]\r\n\treturn {\r\n\t\tvalue: item.path,\r\n\t\tlabel: (\r\n\t\t\t<Link to={item.path}>\r\n\t\t\t\t<div className=\"search-list-item\">\r\n\t\t\t\t\t<div className=\"icon\">\r\n\t\t\t\t\t\t{getCategoryIcon(category)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t<div className=\"font-weight-semibold\"><IntlMessage id={item.title} /></div>\r\n\t\t\t\t\t\t<div className=\"font-size-sm text-muted\">{category} </div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Link>\r\n\t\t),\r\n\t};\r\n});\r\n\r\nconst SearchInput = props => {\r\n\tconst { active, close, isMobile, mode } = props\r\n\tconst [value, setValue] = useState('');\r\n\tconst [options, setOptions] = useState([])\r\n\tconst inputRef = useRef(null);\r\n\r\n\tconst onSelect = () => {\r\n\t\tsetValue('')\r\n\t\tsetOptions([])\r\n\t\tif(close) {\r\n\t\t\tclose()\r\n\t\t}\r\n  };\r\n\r\n\tconst onSearch = searchText => {\r\n\t\tsetValue(searchText)\r\n\t\tsetOptions(!searchText ? [] : searchResult(searchText))\r\n\t};\r\n\t\r\n\tconst autofocus = () => {\r\n\t\tinputRef.current.focus();\r\n\t}\r\n\r\n\tif(active) {\r\n\t\tautofocus()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<AutoComplete\r\n\t\t\tref={inputRef} \r\n\t\t\tclassName={`nav-search-input ${isMobile? 'is-mobile' : ''} ${mode === 'light' ? 'light' : ''}`}\r\n\t\t\tdropdownClassName=\"nav-search-dropdown\"\r\n\t\t\toptions={options}\r\n\t\t\tonSelect={onSelect}\r\n\t\t\tonSearch={onSearch}\r\n\t\t\tvalue={value}\r\n\t\t\tfilterOption={(inputValue, option) => \r\n\t\t\t\toption.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1\r\n\t\t\t}\r\n\t\t>\r\n\t\t\t<Input placeholder=\"Search...\"  prefix={<SearchOutlined className=\"mr-0\" />} />\r\n\t\t</AutoComplete>\r\n\t)\r\n}\r\n\r\nexport default SearchInput\r\n"]},"metadata":{},"sourceType":"module"}