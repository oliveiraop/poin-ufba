{"ast":null,"code":"var _jsxFileName = \"/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/ThemeConfigurator.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Radio, Switch, Button, message } from 'antd';\nimport { toggleCollapsedNav, onNavTypeChange, onNavStyleChange, onTopNavColorChange, onHeaderNavColorChange, onSwitchTheme } from 'redux/actions/Theme';\nimport { CopyOutlined } from '@ant-design/icons';\nimport ColorPicker from 'components/shared-components/ColorPicker';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport NavLanguage from './NavLanguage';\nimport { SIDE_NAV_LIGHT, NAV_TYPE_SIDE, NAV_TYPE_TOP, SIDE_NAV_DARK } from 'constants/ThemeConstant';\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\nimport utils from 'utils/index';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colorOptions = ['#3e82f7', '#24a772', '#de4436', '#924aca', '#193550'];\n\nconst ListOption = _ref => {\n  let {\n    name,\n    selector,\n    disabled,\n    vertical\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `my-4 ${vertical ? '' : 'd-flex align-items-center justify-content-between'}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${disabled ? 'opacity-0-3' : ''} ${vertical ? 'mb-3' : ''}`,\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: selector\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 2\n  }, this);\n};\n\n_c = ListOption;\nexport const ThemeConfigurator = _ref2 => {\n  _s();\n\n  let {\n    navType,\n    sideNavTheme,\n    navCollapsed,\n    topNavColor,\n    headerNavColor,\n    locale,\n    currentTheme,\n    toggleCollapsedNav,\n    onNavTypeChange,\n    onNavStyleChange,\n    onTopNavColorChange,\n    onHeaderNavColorChange,\n    onSwitchTheme\n  } = _ref2;\n  const isNavTop = navType === NAV_TYPE_TOP ? true : false;\n  const isCollapse = navCollapsed;\n  const {\n    switcher,\n    themes\n  } = useThemeSwitcher();\n\n  const toggleTheme = isChecked => {\n    onHeaderNavColorChange('');\n    const changedTheme = isChecked ? 'dark' : 'light';\n    onSwitchTheme(changedTheme);\n    switcher({\n      theme: themes[changedTheme]\n    });\n  };\n\n  const ontopNavColorClick = value => {\n    onHeaderNavColorChange('');\n    const {\n      rgb\n    } = value;\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\n    const hex = utils.rgbaToHex(rgba);\n    onTopNavColorChange(hex);\n  };\n\n  const onHeaderNavColorClick = value => {\n    const {\n      rgb\n    } = value;\n    const rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`;\n    const hex = utils.rgbaToHex(rgba);\n    onHeaderNavColorChange(hex);\n  };\n\n  const onNavTypeClick = value => {\n    onHeaderNavColorChange('');\n\n    if (value === NAV_TYPE_TOP) {\n      onTopNavColorChange(colorOptions[0]);\n      toggleCollapsedNav(false);\n    }\n\n    onNavTypeChange(value);\n  };\n\n  const genCopySettingJson = configState => JSON.stringify(configState, null, 2);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3 font-weight-bold\",\n        children: \"Navigation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 5\n      }, this), isNavTop ? /*#__PURE__*/_jsxDEV(ListOption, {\n        name: \"Top Nav Color:\",\n        vertical: true,\n        selector: /*#__PURE__*/_jsxDEV(ColorPicker, {\n          color: topNavColor,\n          colorChange: ontopNavColorClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 6\n      }, this) : /*#__PURE__*/_jsxDEV(ListOption, {\n        name: \"Header Nav Color:\",\n        vertical: true,\n        selector: /*#__PURE__*/_jsxDEV(ColorPicker, {\n          color: headerNavColor,\n          colorChange: onHeaderNavColorClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 8\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(ListOption, {\n        name: \"Navigation Type:\",\n        selector: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          size: \"small\",\n          onChange: e => onNavTypeClick(e.target.value),\n          value: navType,\n          children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n            value: NAV_TYPE_SIDE,\n            children: \"Side\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n            value: NAV_TYPE_TOP,\n            children: \"Top\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListOption, {\n        name: \"Side Nav Color:\",\n        selector: /*#__PURE__*/_jsxDEV(Radio.Group, {\n          disabled: isNavTop,\n          size: \"small\",\n          onChange: e => onNavStyleChange(e.target.value),\n          value: sideNavTheme,\n          children: [/*#__PURE__*/_jsxDEV(Radio.Button, {\n            value: SIDE_NAV_LIGHT,\n            children: \"Light\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(Radio.Button, {\n            value: SIDE_NAV_DARK,\n            children: \"Dark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this),\n        disabled: isNavTop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListOption, {\n        name: \"Side Nav Collapse:\",\n        selector: /*#__PURE__*/_jsxDEV(Switch, {\n          disabled: isNavTop,\n          checked: isCollapse,\n          onChange: () => toggleCollapsedNav(!navCollapsed)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this),\n        disabled: isNavTop\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListOption, {\n        name: \"Dark Theme:\",\n        selector: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: currentTheme === 'dark',\n          onChange: toggleTheme\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"mb-3 font-weight-bold\",\n        children: \"Locale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(ListOption, {\n        name: \"Language:\",\n        selector: /*#__PURE__*/_jsxDEV(NavLanguage, {\n          configDisplay: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n        text: genCopySettingJson({\n          navType,\n          sideNavTheme,\n          navCollapsed,\n          topNavColor,\n          headerNavColor,\n          locale,\n          currentTheme\n        }),\n        onCopy: () => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.'),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: /*#__PURE__*/_jsxDEV(CopyOutlined, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 20\n          }, this),\n          block: true,\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Copy Setting\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ThemeConfigurator, \"W/HYu+QL53zvRZ3JRF5JUXtg2AM=\", false, function () {\n  return [useThemeSwitcher];\n});\n\n_c2 = ThemeConfigurator;\n\nconst mapStateToProps = _ref3 => {\n  let {\n    theme\n  } = _ref3;\n  const {\n    navType,\n    sideNavTheme,\n    navCollapsed,\n    topNavColor,\n    headerNavColor,\n    locale,\n    currentTheme\n  } = theme;\n  return {\n    navType,\n    sideNavTheme,\n    navCollapsed,\n    topNavColor,\n    headerNavColor,\n    locale,\n    currentTheme\n  };\n};\n\nconst mapDispatchToProps = {\n  toggleCollapsedNav,\n  onNavTypeChange,\n  onNavStyleChange,\n  onTopNavColorChange,\n  onHeaderNavColorChange,\n  onSwitchTheme\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ListOption\");\n$RefreshReg$(_c2, \"ThemeConfigurator\");","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/ThemeConfigurator.js"],"names":["React","connect","Radio","Switch","Button","message","toggleCollapsedNav","onNavTypeChange","onNavStyleChange","onTopNavColorChange","onHeaderNavColorChange","onSwitchTheme","CopyOutlined","ColorPicker","CopyToClipboard","NavLanguage","SIDE_NAV_LIGHT","NAV_TYPE_SIDE","NAV_TYPE_TOP","SIDE_NAV_DARK","useThemeSwitcher","utils","colorOptions","ListOption","name","selector","disabled","vertical","ThemeConfigurator","navType","sideNavTheme","navCollapsed","topNavColor","headerNavColor","locale","currentTheme","isNavTop","isCollapse","switcher","themes","toggleTheme","isChecked","changedTheme","theme","ontopNavColorClick","value","rgb","rgba","r","g","b","a","hex","rgbaToHex","onHeaderNavColorClick","onNavTypeClick","genCopySettingJson","configState","JSON","stringify","e","target","success","mapStateToProps","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Radio, Switch, Button, message } from 'antd';\r\nimport { \r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n} from 'redux/actions/Theme';\r\nimport { CopyOutlined } from '@ant-design/icons';\r\nimport ColorPicker from 'components/shared-components/ColorPicker';\r\nimport CopyToClipboard from 'react-copy-to-clipboard';\r\nimport NavLanguage from './NavLanguage';\r\nimport { \r\n\tSIDE_NAV_LIGHT,\r\n\tNAV_TYPE_SIDE,\r\n\tNAV_TYPE_TOP,\r\n\tSIDE_NAV_DARK\r\n} from 'constants/ThemeConstant';\r\nimport { useThemeSwitcher } from \"react-css-theme-switcher\";\r\nimport utils from 'utils/index';\r\n\r\nconst colorOptions = [\r\n\t'#3e82f7',\r\n\t'#24a772',\r\n\t'#de4436',\r\n\t'#924aca',\r\n\t'#193550'\r\n]\r\n\r\nconst ListOption = ({name, selector, disabled, vertical}) => (\r\n\t<div className={`my-4 ${vertical? '' : 'd-flex align-items-center justify-content-between'}`}>\r\n\t\t<div className={`${disabled ? 'opacity-0-3' : ''} ${vertical? 'mb-3' : ''}`}>{name}</div>\r\n\t\t<div>{selector}</div>\r\n\t</div>\r\n)\r\n\r\nexport const ThemeConfigurator = ({ \r\n\tnavType, \r\n\tsideNavTheme, \r\n\tnavCollapsed,\r\n\ttopNavColor,\r\n\theaderNavColor,\r\n\tlocale,\r\n\tcurrentTheme,\r\n\ttoggleCollapsedNav, \r\n\tonNavTypeChange, \r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}) => {\r\n\tconst isNavTop = navType === NAV_TYPE_TOP? true : false\r\n\tconst isCollapse = navCollapsed \r\n\r\n\tconst { switcher, themes } = useThemeSwitcher();\r\n\r\n\tconst toggleTheme = (isChecked) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst changedTheme = isChecked ? 'dark' : 'light'\r\n\t\tonSwitchTheme(changedTheme)\r\n    switcher({ theme: themes[changedTheme] });\r\n  };\r\n\r\n\tconst ontopNavColorClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonTopNavColorChange(hex)\r\n\t}\r\n\tconst onHeaderNavColorClick = (value) => {\r\n\t\tconst { rgb } = value\r\n\t\tconst rgba = `rgba(${rgb.r}, ${rgb.g}, ${rgb.b}, ${rgb.a})`\r\n\t\tconst hex = utils.rgbaToHex(rgba)\r\n\t\tonHeaderNavColorChange(hex)\r\n\t}\r\n\r\n\tconst onNavTypeClick = (value) => {\r\n\t\tonHeaderNavColorChange('')\r\n\t\tif(value === NAV_TYPE_TOP) {\r\n\t\t\tonTopNavColorChange(colorOptions[0])\r\n\t\t\ttoggleCollapsedNav(false)\r\n\t\t}\r\n\t\tonNavTypeChange(value)\r\n\t}\r\n\r\n\tconst genCopySettingJson = (configState) => JSON.stringify(configState, null, 2);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Navigation</h4>\r\n\t\t\t\t{\r\n\t\t\t\t\tisNavTop ?\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Top Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={topNavColor} colorChange={ontopNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ListOption \r\n\t\t\t\t\t\tname=\"Header Nav Color:\"\r\n\t\t\t\t\t\tvertical\r\n\t\t\t\t\t\tselector={\r\n\t\t\t\t\t\t\t<ColorPicker color={headerNavColor} colorChange={onHeaderNavColorClick}/>\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Navigation Type:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group \r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavTypeClick(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={navType}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_SIDE}>Side</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={NAV_TYPE_TOP}>Top</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Color:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Radio.Group\r\n\t\t\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t\t\t\tsize=\"small\" \r\n\t\t\t\t\t\t\tonChange={e => onNavStyleChange(e.target.value)} \r\n\t\t\t\t\t\t\tvalue={sideNavTheme}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_LIGHT}>Light</Radio.Button>\r\n\t\t\t\t\t\t\t<Radio.Button value={SIDE_NAV_DARK}>Dark</Radio.Button>\r\n\t\t\t\t\t\t</Radio.Group>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Side Nav Collapse:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch \r\n\t\t\t\t\t\t\tdisabled={isNavTop} \r\n\t\t\t\t\t\t\tchecked={isCollapse} \r\n\t\t\t\t\t\t\tonChange={() => toggleCollapsedNav(!navCollapsed)} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdisabled={isNavTop}\r\n\t\t\t\t/>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Dark Theme:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<Switch checked={currentTheme === 'dark'} onChange={toggleTheme} />\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"mb-5\">\r\n\t\t\t\t<h4 className=\"mb-3 font-weight-bold\">Locale</h4>\r\n\t\t\t\t<ListOption \r\n\t\t\t\t\tname=\"Language:\"\r\n\t\t\t\t\tselector={\r\n\t\t\t\t\t\t<NavLanguage configDisplay/>\r\n\t\t\t\t\t}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<CopyToClipboard\r\n\t\t\t\t\ttext={genCopySettingJson({ navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme})}\r\n\t\t\t\t\tonCopy={() => message.success('Copy Success, please paste it to src/configs/AppConfig.js THEME_CONFIG variable.') }\r\n\t\t\t\t>\r\n\t\t\t\t\t<Button icon={<CopyOutlined /> } block>\r\n\t\t\t\t\t\t<span>Copy Setting</span>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</CopyToClipboard>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme } =  theme;\r\n  return { navType, sideNavTheme, navCollapsed, topNavColor, headerNavColor, locale, currentTheme }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n\ttoggleCollapsedNav,\r\n\tonNavTypeChange,\r\n\tonNavStyleChange,\r\n\tonTopNavColorChange,\r\n\tonHeaderNavColorChange,\r\n\tonSwitchTheme\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ThemeConfigurator)\r\n"]},"metadata":{},"sourceType":"module"}