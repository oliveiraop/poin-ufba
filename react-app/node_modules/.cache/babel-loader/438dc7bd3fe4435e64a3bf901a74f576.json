{"ast":null,"code":"var _jsxFileName = \"/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/PageHeaderAlt.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const PageHeaderAlt = _ref => {\n  _s();\n\n  let {\n    children,\n    background,\n    className,\n    overlap,\n    navType\n  } = _ref;\n  const [widthOffset, setWidthOffset] = useState(0);\n  const ref = useRef(null);\n  useEffect(() => {\n    if (navType === NAV_TYPE_TOP) {\n      const windowSize = window.innerWidth;\n      const pageHeaderSize = ref.current.offsetWidth;\n      setWidthOffset((windowSize - pageHeaderSize) / 2);\n    }\n  }, [navType]);\n\n  const getStyle = () => {\n    let style = {\n      backgroundImage: background ? `url(${background})` : 'none'\n    };\n\n    if (navType === NAV_TYPE_TOP) {\n      style.marginRight = -widthOffset;\n      style.marginLeft = -widthOffset;\n      style.paddingLeft = 0;\n      style.paddingRight = 0;\n    }\n\n    return style;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: ref,\n    className: `page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`,\n    style: getStyle(),\n    children: navType === NAV_TYPE_TOP ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: children\n    }, void 0, false)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n\n_s(PageHeaderAlt, \"ouEnLPros1K5gNmt1yApzg+O2mI=\");\n\n_c = PageHeaderAlt;\nPageHeaderAlt.propTypes = {\n  children: PropTypes.node,\n  background: PropTypes.string,\n  className: PropTypes.string,\n  overlap: PropTypes.bool\n};\n\nconst mapStateToProps = _ref2 => {\n  let {\n    theme\n  } = _ref2;\n  const {\n    navType\n  } = theme;\n  return {\n    navType\n  };\n};\n\nexport default connect(mapStateToProps, {})(PageHeaderAlt);\n\nvar _c;\n\n$RefreshReg$(_c, \"PageHeaderAlt\");","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/components/layout-components/PageHeaderAlt.js"],"names":["React","useRef","useEffect","useState","PropTypes","connect","NAV_TYPE_TOP","PageHeaderAlt","children","background","className","overlap","navType","widthOffset","setWidthOffset","ref","windowSize","window","innerWidth","pageHeaderSize","current","offsetWidth","getStyle","style","backgroundImage","marginRight","marginLeft","paddingLeft","paddingRight","propTypes","node","string","bool","mapStateToProps","theme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAkD,OAAlD;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;;AAEA,OAAO,MAAMC,aAAa,GAAG,QAAyD;AAAA;;AAAA,MAAxD;AAACC,IAAAA,QAAD;AAAWC,IAAAA,UAAX;AAAuBC,IAAAA,SAAvB;AAAkCC,IAAAA,OAAlC;AAA2CC,IAAAA;AAA3C,GAAwD;AACrF,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCX,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAMY,GAAG,GAAGd,MAAM,CAAC,IAAD,CAAlB;AAECC,EAAAA,SAAS,CAAC,MAAM;AAChB,QAAIU,OAAO,KAAKN,YAAhB,EAA8B;AAC7B,YAAMU,UAAU,GAAGC,MAAM,CAACC,UAA1B;AACA,YAAMC,cAAc,GAAGJ,GAAG,CAACK,OAAJ,CAAYC,WAAnC;AACAP,MAAAA,cAAc,CAAE,CAACE,UAAU,GAAGG,cAAd,IAAgC,CAAlC,CAAd;AACA;AACD,GANS,EAMP,CAACP,OAAD,CANO,CAAT;;AAQD,QAAMU,QAAQ,GAAG,MAAM;AACtB,QAAIC,KAAK,GAAG;AAAEC,MAAAA,eAAe,EAAEf,UAAU,GAAI,OAAMA,UAAW,GAArB,GAA0B;AAAvD,KAAZ;;AACA,QAAIG,OAAO,KAAKN,YAAhB,EAA8B;AAC7BiB,MAAAA,KAAK,CAACE,WAAN,GAAoB,CAACZ,WAArB;AACAU,MAAAA,KAAK,CAACG,UAAN,GAAmB,CAACb,WAApB;AACAU,MAAAA,KAAK,CAACI,WAAN,GAAoB,CAApB;AACAJ,MAAAA,KAAK,CAACK,YAAN,GAAqB,CAArB;AACA;;AACD,WAAOL,KAAP;AACA,GATD;;AAWA,sBACC;AACC,IAAA,GAAG,EAAER,GADN;AAEC,IAAA,SAAS,EAAG,mBAAkBL,SAAS,GAAGA,SAAH,GAAe,EAAG,IAAGC,OAAO,IAAI,SAAU,EAFlF;AAGC,IAAA,KAAK,EAAEW,QAAQ,EAHhB;AAAA,cAKEV,OAAO,KAAKN,YAAZ,gBAA2B;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,gBAA4BE;AAA5B;AAAA;AAAA;AAAA;AAAA,YAA3B,gBAAyE;AAAA,gBAAGA;AAAH;AAL3E;AAAA;AAAA;AAAA;AAAA,UADD;AASA,CAhCM;;GAAMD,a;;KAAAA,a;AAkCbA,aAAa,CAACsB,SAAd,GAA0B;AACxBrB,EAAAA,QAAQ,EAAEJ,SAAS,CAAC0B,IADI;AAEzBrB,EAAAA,UAAU,EAAEL,SAAS,CAAC2B,MAFG;AAGzBrB,EAAAA,SAAS,EAAEN,SAAS,CAAC2B,MAHI;AAIzBpB,EAAAA,OAAO,EAAEP,SAAS,CAAC4B;AAJM,CAA1B;;AAOA,MAAMC,eAAe,GAAG,SAAe;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACrC,QAAM;AAAEtB,IAAAA;AAAF,MAAesB,KAArB;AACA,SAAO;AAAEtB,IAAAA;AAAF,GAAP;AACD,CAHD;;AAKA,eAAeP,OAAO,CAAC4B,eAAD,EAAkB,EAAlB,CAAP,CAA6B1B,aAA7B,CAAf","sourcesContent":["import React, { useRef, useEffect, useState} from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { NAV_TYPE_TOP } from 'constants/ThemeConstant';\r\n\r\nexport const PageHeaderAlt = ({children, background, className, overlap, navType}) => {\r\n\tconst [widthOffset, setWidthOffset] = useState(0)\r\n\tconst ref = useRef(null);\r\n\r\n  useEffect(() => {\r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tconst windowSize = window.innerWidth\r\n\t\t\tconst pageHeaderSize = ref.current.offsetWidth\r\n\t\t\tsetWidthOffset( (windowSize - pageHeaderSize) / 2 )\r\n\t\t}\r\n\t}, [navType]);\r\n\t\r\n\tconst getStyle = () => {\r\n\t\tlet style = { backgroundImage: background ? `url(${background})` : 'none' } \r\n\t\tif (navType === NAV_TYPE_TOP) {\r\n\t\t\tstyle.marginRight = -widthOffset\r\n\t\t\tstyle.marginLeft = -widthOffset\r\n\t\t\tstyle.paddingLeft = 0\r\n\t\t\tstyle.paddingRight = 0\r\n\t\t}\r\n\t\treturn style\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tref={ref}\r\n\t\t\tclassName={`page-header-alt ${className ? className : ''} ${overlap && 'overlap'}`} \r\n\t\t\tstyle={getStyle()}\r\n\t\t>\r\n\t\t\t{navType === NAV_TYPE_TOP ? <div className=\"container\">{children}</div> : <>{children}</>}\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nPageHeaderAlt.propTypes = {\r\n  children: PropTypes.node,\r\n\tbackground: PropTypes.string,\r\n\tclassName: PropTypes.string,\r\n\toverlap: PropTypes.bool\r\n};\r\n\r\nconst mapStateToProps = ({ theme }) => {\r\n  const { navType } =  theme;\r\n  return { navType }\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(PageHeaderAlt);"]},"metadata":{},"sourceType":"module"}