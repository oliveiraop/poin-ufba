{"ast":null,"code":"var _jsxFileName = \"/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/views/index.js\";\nimport React from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport AppLayout from \"layouts/app-layout\";\nimport AuthLayout from \"layouts/auth-layout\";\nimport AppLocale from \"lang\";\nimport { IntlProvider } from \"react-intl\";\nimport { ConfigProvider } from \"antd\";\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from \"configs/AppConfig\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RouteInterceptor(_ref) {\n  let {\n    children,\n    isAuthenticated,\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: _ref2 => {\n      let {\n        location\n      } = _ref2;\n      return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: AUTH_PREFIX_PATH,\n          state: {\n            from: location\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n}\n\n_c = RouteInterceptor;\nexport const Views = props => {\n  const {\n    locale,\n    token,\n    location\n  } = props;\n  const currentAppLocale = AppLocale[locale];\n  return /*#__PURE__*/_jsxDEV(IntlProvider, {\n    locale: currentAppLocale.locale,\n    messages: currentAppLocale.messages,\n    children: /*#__PURE__*/_jsxDEV(ConfigProvider, {\n      locale: currentAppLocale.antd,\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          children: /*#__PURE__*/_jsxDEV(Redirect, {\n            to: APP_PREFIX_PATH\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: AUTH_PREFIX_PATH,\n          children: /*#__PURE__*/_jsxDEV(AuthLayout, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(RouteInterceptor, {\n          path: APP_PREFIX_PATH,\n          isAuthenticated: token,\n          children: /*#__PURE__*/_jsxDEV(AppLayout, {\n            location: location\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Views;\n\nconst mapStateToProps = _ref3 => {\n  let {\n    theme,\n    auth\n  } = _ref3;\n  const {\n    locale\n  } = theme;\n  const {\n    token\n  } = auth;\n  return {\n    locale,\n    token\n  };\n};\n\nexport default withRouter(connect(mapStateToProps)(Views));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RouteInterceptor\");\n$RefreshReg$(_c2, \"Views\");","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/views/index.js"],"names":["React","Route","Switch","Redirect","withRouter","connect","AppLayout","AuthLayout","AppLocale","IntlProvider","ConfigProvider","APP_PREFIX_PATH","AUTH_PREFIX_PATH","RouteInterceptor","children","isAuthenticated","rest","location","pathname","state","from","Views","props","locale","token","currentAppLocale","messages","antd","mapStateToProps","theme","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,UAAlC,QAAoD,kBAApD;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,SAAP,MAAsB,MAAtB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,cAAT,QAA+B,MAA/B;AACA,SAASC,eAAT,EAA0BC,gBAA1B,QAAkD,mBAAlD;;;AAEA,SAASC,gBAAT,OAAkE;AAAA,MAAxC;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,eAAZ;AAA6B,OAAGC;AAAhC,GAAwC;AAChE,sBACE,QAAC,KAAD,OACMA,IADN;AAEE,IAAA,MAAM,EAAE;AAAA,UAAC;AAAEC,QAAAA;AAAF,OAAD;AAAA,aACNF,eAAe,GACbD,QADa,gBAGb,QAAC,QAAD;AACE,QAAA,EAAE,EAAE;AACFI,UAAAA,QAAQ,EAAEN,gBADR;AAEFO,UAAAA,KAAK,EAAE;AAAEC,YAAAA,IAAI,EAAEH;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,cAJI;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;KAlBQJ,gB;AAoBT,OAAO,MAAMQ,KAAK,GAAIC,KAAD,IAAW;AAC9B,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,KAAV;AAAiBP,IAAAA;AAAjB,MAA8BK,KAApC;AACA,QAAMG,gBAAgB,GAAGjB,SAAS,CAACe,MAAD,CAAlC;AACA,sBACE,QAAC,YAAD;AACE,IAAA,MAAM,EAAEE,gBAAgB,CAACF,MAD3B;AAEE,IAAA,QAAQ,EAAEE,gBAAgB,CAACC,QAF7B;AAAA,2BAIE,QAAC,cAAD;AAAgB,MAAA,MAAM,EAAED,gBAAgB,CAACE,IAAzC;AAAA,6BACE,QAAC,MAAD;AAAA,gCACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,EAAE,EAAEhB;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,KAAD;AAAO,UAAA,IAAI,EAAEC,gBAAb;AAAA,iCACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE,QAAC,gBAAD;AAAkB,UAAA,IAAI,EAAED,eAAxB;AAAyC,UAAA,eAAe,EAAEa,KAA1D;AAAA,iCACE,QAAC,SAAD;AAAW,YAAA,QAAQ,EAAEP;AAArB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CAvBM;MAAMI,K;;AAyBb,MAAMO,eAAe,GAAG,SAAqB;AAAA,MAApB;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAoB;AAC3C,QAAM;AAAEP,IAAAA;AAAF,MAAaM,KAAnB;AACA,QAAM;AAAEL,IAAAA;AAAF,MAAYM,IAAlB;AACA,SAAO;AAAEP,IAAAA,MAAF;AAAUC,IAAAA;AAAV,GAAP;AACD,CAJD;;AAMA,eAAepB,UAAU,CAACC,OAAO,CAACuB,eAAD,CAAP,CAAyBP,KAAzB,CAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport AppLayout from \"layouts/app-layout\";\r\nimport AuthLayout from \"layouts/auth-layout\";\r\nimport AppLocale from \"lang\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport { APP_PREFIX_PATH, AUTH_PREFIX_PATH } from \"configs/AppConfig\";\r\n\r\nfunction RouteInterceptor({ children, isAuthenticated, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) =>\r\n        isAuthenticated ? (\r\n          children\r\n        ) : (\r\n          <Redirect\r\n            to={{\r\n              pathname: AUTH_PREFIX_PATH,\r\n              state: { from: location },\r\n            }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n}\r\n\r\nexport const Views = (props) => {\r\n  const { locale, token, location } = props;\r\n  const currentAppLocale = AppLocale[locale];\r\n  return (\r\n    <IntlProvider\r\n      locale={currentAppLocale.locale}\r\n      messages={currentAppLocale.messages}\r\n    >\r\n      <ConfigProvider locale={currentAppLocale.antd}>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Redirect to={APP_PREFIX_PATH} />\r\n          </Route>\r\n          <Route path={AUTH_PREFIX_PATH}>\r\n            <AuthLayout />\r\n          </Route>\r\n          <RouteInterceptor path={APP_PREFIX_PATH} isAuthenticated={token}>\r\n            <AppLayout location={location} />\r\n          </RouteInterceptor>\r\n        </Switch>\r\n      </ConfigProvider>\r\n    </IntlProvider>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = ({ theme, auth }) => {\r\n  const { locale } = theme;\r\n  const { token } = auth;\r\n  return { locale, token };\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps)(Views));\r\n"]},"metadata":{},"sourceType":"module"}