{"ast":null,"code":"import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\nimport { AUTH_TOKEN, SIGNIN, SIGNOUT, SIGNUP, SIGNIN_WITH_GOOGLE, SIGNIN_WITH_FACEBOOK } from '../constants/Auth';\nimport { showAuthMessage, authenticated, signOutSuccess, signUpSuccess, signInWithGoogleAuthenticated, signInWithFacebookAuthenticated } from \"../actions/Auth\";\nimport FirebaseService from 'services/FirebaseService';\nexport function* signInWithFBEmail() {\n  yield takeEvery(SIGNIN, function* (_ref) {\n    let {\n      payload\n    } = _ref;\n    const {\n      email,\n      password\n    } = payload;\n\n    try {\n      const user = yield call(FirebaseService.signInEmailRequest, email, password);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(authenticated(user.user.uid));\n      }\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n}\nexport function* signOut() {\n  yield takeEvery(SIGNOUT, function* () {\n    try {\n      const signOutUser = yield call(FirebaseService.signOutRequest);\n\n      if (signOutUser === undefined) {\n        localStorage.removeItem(AUTH_TOKEN);\n        yield put(signOutSuccess(signOutUser));\n      } else {\n        yield put(showAuthMessage(signOutUser.message));\n      }\n    } catch (err) {\n      yield put(showAuthMessage(err));\n    }\n  });\n}\nexport function* signUpWithFBEmail() {\n  yield takeEvery(SIGNUP, function* (_ref2) {\n    let {\n      payload\n    } = _ref2;\n    const {\n      email,\n      password\n    } = payload;\n\n    try {\n      const user = yield call(FirebaseService.signUpEmailRequest, email, password);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signUpSuccess(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport function* signInWithFBGoogle() {\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\n    try {\n      const user = yield call(FirebaseService.signInGoogleRequest);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signInWithGoogleAuthenticated(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport function* signInWithFacebook() {\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\n    try {\n      const user = yield call(FirebaseService.signInFacebookRequest);\n\n      if (user.message) {\n        yield put(showAuthMessage(user.message));\n      } else {\n        localStorage.setItem(AUTH_TOKEN, user.user.uid);\n        yield put(signInWithFacebookAuthenticated(user.user.uid));\n      }\n    } catch (error) {\n      yield put(showAuthMessage(error));\n    }\n  });\n}\nexport default function* rootSaga() {\n  yield all([fork(signInWithFBEmail), fork(signOut), fork(signUpWithFBEmail), fork(signInWithFBGoogle), fork(signInWithFacebook)]);\n}","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/redux/sagas/Auth.js"],"names":["all","takeEvery","put","fork","call","AUTH_TOKEN","SIGNIN","SIGNOUT","SIGNUP","SIGNIN_WITH_GOOGLE","SIGNIN_WITH_FACEBOOK","showAuthMessage","authenticated","signOutSuccess","signUpSuccess","signInWithGoogleAuthenticated","signInWithFacebookAuthenticated","FirebaseService","signInWithFBEmail","payload","email","password","user","signInEmailRequest","message","localStorage","setItem","uid","err","signOut","signOutUser","signOutRequest","undefined","removeItem","signUpWithFBEmail","signUpEmailRequest","error","signInWithFBGoogle","signInGoogleRequest","signInWithFacebook","signInFacebookRequest","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,EAA8BC,IAA9B,EAAoCC,IAApC,QAAgD,oBAAhD;AACA,SACCC,UADD,EAECC,MAFD,EAGCC,OAHD,EAICC,MAJD,EAKCC,kBALD,EAMCC,oBAND,QAOO,mBAPP;AAQA,SACCC,eADD,EAECC,aAFD,EAGCC,cAHD,EAICC,aAJD,EAKCC,6BALD,EAMCC,+BAND,QAOO,iBAPP;AASA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,OAAO,UAAUC,iBAAV,GAA8B;AACnC,QAAMjB,SAAS,CAACK,MAAD,EAAS,iBAAsB;AAAA,QAAX;AAACa,MAAAA;AAAD,KAAW;AAC9C,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoBF,OAA1B;;AACA,QAAI;AACH,YAAMG,IAAI,GAAG,MAAMlB,IAAI,CAACa,eAAe,CAACM,kBAAjB,EAAqCH,KAArC,EAA4CC,QAA5C,CAAvB;;AACA,UAAIC,IAAI,CAACE,OAAT,EAAkB;AACjB,cAAMtB,GAAG,CAACS,eAAe,CAACW,IAAI,CAACE,OAAN,CAAhB,CAAT;AACA,OAFD,MAEO;AACNC,QAAAA,YAAY,CAACC,OAAb,CAAqBrB,UAArB,EAAiCiB,IAAI,CAACA,IAAL,CAAUK,GAA3C;AACA,cAAMzB,GAAG,CAACU,aAAa,CAACU,IAAI,CAACA,IAAL,CAAUK,GAAX,CAAd,CAAT;AACA;AACD,KARD,CAQE,OAAOC,GAAP,EAAY;AACb,YAAM1B,GAAG,CAACS,eAAe,CAACiB,GAAD,CAAhB,CAAT;AACA;AACD,GAbe,CAAf;AAcD;AAED,OAAO,UAAUC,OAAV,GAAoB;AACzB,QAAM5B,SAAS,CAACM,OAAD,EAAU,aAAa;AACtC,QAAI;AACH,YAAMuB,WAAW,GAAG,MAAM1B,IAAI,CAACa,eAAe,CAACc,cAAjB,CAA9B;;AACA,UAAID,WAAW,KAAKE,SAApB,EAA+B;AAC9BP,QAAAA,YAAY,CAACQ,UAAb,CAAwB5B,UAAxB;AACA,cAAMH,GAAG,CAACW,cAAc,CAACiB,WAAD,CAAf,CAAT;AACA,OAHD,MAGO;AACN,cAAM5B,GAAG,CAACS,eAAe,CAACmB,WAAW,CAACN,OAAb,CAAhB,CAAT;AACA;AACD,KARD,CAQE,OAAOI,GAAP,EAAY;AACb,YAAM1B,GAAG,CAACS,eAAe,CAACiB,GAAD,CAAhB,CAAT;AACA;AACD,GAZe,CAAf;AAaD;AAED,OAAO,UAAUM,iBAAV,GAA8B;AACnC,QAAMjC,SAAS,CAACO,MAAD,EAAS,kBAAsB;AAAA,QAAX;AAACW,MAAAA;AAAD,KAAW;AAC9C,UAAM;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR,QAAoBF,OAA1B;;AACA,QAAI;AACH,YAAMG,IAAI,GAAG,MAAMlB,IAAI,CAACa,eAAe,CAACkB,kBAAjB,EAAqCf,KAArC,EAA4CC,QAA5C,CAAvB;;AACA,UAAIC,IAAI,CAACE,OAAT,EAAkB;AACjB,cAAMtB,GAAG,CAACS,eAAe,CAACW,IAAI,CAACE,OAAN,CAAhB,CAAT;AACA,OAFD,MAEO;AACNC,QAAAA,YAAY,CAACC,OAAb,CAAqBrB,UAArB,EAAiCiB,IAAI,CAACA,IAAL,CAAUK,GAA3C;AACA,cAAMzB,GAAG,CAACY,aAAa,CAACQ,IAAI,CAACA,IAAL,CAAUK,GAAX,CAAd,CAAT;AACA;AACD,KARD,CAQE,OAAOS,KAAP,EAAc;AACf,YAAMlC,GAAG,CAACS,eAAe,CAACyB,KAAD,CAAhB,CAAT;AACA;AACD,GAbe,CAAf;AAeD;AAED,OAAO,UAAUC,kBAAV,GAA+B;AACpC,QAAMpC,SAAS,CAACQ,kBAAD,EAAqB,aAAa;AACjD,QAAI;AACH,YAAMa,IAAI,GAAG,MAAMlB,IAAI,CAACa,eAAe,CAACqB,mBAAjB,CAAvB;;AACA,UAAIhB,IAAI,CAACE,OAAT,EAAkB;AACjB,cAAMtB,GAAG,CAACS,eAAe,CAACW,IAAI,CAACE,OAAN,CAAhB,CAAT;AACA,OAFD,MAEO;AACNC,QAAAA,YAAY,CAACC,OAAb,CAAqBrB,UAArB,EAAiCiB,IAAI,CAACA,IAAL,CAAUK,GAA3C;AACA,cAAMzB,GAAG,CAACa,6BAA6B,CAACO,IAAI,CAACA,IAAL,CAAUK,GAAX,CAA9B,CAAT;AACA;AACD,KARD,CAQE,OAAOS,KAAP,EAAc;AACf,YAAMlC,GAAG,CAACS,eAAe,CAACyB,KAAD,CAAhB,CAAT;AACA;AACD,GAZe,CAAf;AAaD;AAED,OAAO,UAAUG,kBAAV,GAA+B;AACpC,QAAMtC,SAAS,CAACS,oBAAD,EAAuB,aAAa;AACnD,QAAI;AACH,YAAMY,IAAI,GAAG,MAAMlB,IAAI,CAACa,eAAe,CAACuB,qBAAjB,CAAvB;;AACA,UAAIlB,IAAI,CAACE,OAAT,EAAkB;AACjB,cAAMtB,GAAG,CAACS,eAAe,CAACW,IAAI,CAACE,OAAN,CAAhB,CAAT;AACA,OAFD,MAEO;AACNC,QAAAA,YAAY,CAACC,OAAb,CAAqBrB,UAArB,EAAiCiB,IAAI,CAACA,IAAL,CAAUK,GAA3C;AACA,cAAMzB,GAAG,CAACc,+BAA+B,CAACM,IAAI,CAACA,IAAL,CAAUK,GAAX,CAAhC,CAAT;AACA;AACD,KARD,CAQE,OAAOS,KAAP,EAAc;AACf,YAAMlC,GAAG,CAACS,eAAe,CAACyB,KAAD,CAAhB,CAAT;AACA;AACD,GAZe,CAAf;AAaD;AAED,eAAe,UAAUK,QAAV,GAAqB;AAClC,QAAMzC,GAAG,CAAC,CACVG,IAAI,CAACe,iBAAD,CADM,EAEVf,IAAI,CAAC0B,OAAD,CAFM,EAGV1B,IAAI,CAAC+B,iBAAD,CAHM,EAIV/B,IAAI,CAACkC,kBAAD,CAJM,EAKVlC,IAAI,CAACoC,kBAAD,CALM,CAAD,CAAT;AAOD","sourcesContent":["import { all, takeEvery, put, fork, call } from 'redux-saga/effects';\r\nimport {\r\n\tAUTH_TOKEN,\r\n\tSIGNIN,\r\n\tSIGNOUT,\r\n\tSIGNUP,\r\n\tSIGNIN_WITH_GOOGLE,\r\n\tSIGNIN_WITH_FACEBOOK\r\n} from '../constants/Auth';\r\nimport {\r\n\tshowAuthMessage,\r\n\tauthenticated,\r\n\tsignOutSuccess,\r\n\tsignUpSuccess,\r\n\tsignInWithGoogleAuthenticated,\r\n\tsignInWithFacebookAuthenticated\r\n} from \"../actions/Auth\";\r\n\r\nimport FirebaseService from 'services/FirebaseService'\r\n\r\nexport function* signInWithFBEmail() {\r\n  yield takeEvery(SIGNIN, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(authenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signOut() {\r\n  yield takeEvery(SIGNOUT, function* () {\r\n\t\ttry {\r\n\t\t\tconst signOutUser = yield call(FirebaseService.signOutRequest);\r\n\t\t\tif (signOutUser === undefined) {\r\n\t\t\t\tlocalStorage.removeItem(AUTH_TOKEN);\r\n\t\t\t\tyield put(signOutSuccess(signOutUser));\r\n\t\t\t} else {\r\n\t\t\t\tyield put(showAuthMessage(signOutUser.message));\r\n\t\t\t}\r\n\t\t} catch (err) {\r\n\t\t\tyield put(showAuthMessage(err));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signUpWithFBEmail() {\r\n  yield takeEvery(SIGNUP, function* ({payload}) {\r\n\t\tconst {email, password} = payload;\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signUpEmailRequest, email, password);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signUpSuccess(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t}\r\n\t);\r\n}\r\n\r\nexport function* signInWithFBGoogle() {\r\n  yield takeEvery(SIGNIN_WITH_GOOGLE, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInGoogleRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithGoogleAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport function* signInWithFacebook() {\r\n  yield takeEvery(SIGNIN_WITH_FACEBOOK, function* () {\r\n\t\ttry {\r\n\t\t\tconst user = yield call(FirebaseService.signInFacebookRequest);\r\n\t\t\tif (user.message) {\r\n\t\t\t\tyield put(showAuthMessage(user.message));\r\n\t\t\t} else {\r\n\t\t\t\tlocalStorage.setItem(AUTH_TOKEN, user.user.uid);\r\n\t\t\t\tyield put(signInWithFacebookAuthenticated(user.user.uid));\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tyield put(showAuthMessage(error));\r\n\t\t}\r\n\t});\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([\r\n\t\tfork(signInWithFBEmail),\r\n\t\tfork(signOut),\r\n\t\tfork(signUpWithFBEmail),\r\n\t\tfork(signInWithFBGoogle),\r\n\t\tfork(signInWithFacebook)\r\n  ]);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}