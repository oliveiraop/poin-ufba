{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nfunction configureStore(preloadedState) {\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducers, preloadedState, composeEnhancers(applyMiddleware(...middlewares)));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"../reducers/index\", () => {\n      const nextRootReducer = require(\"../reducers/index\");\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n\nconst store = configureStore();\nexport default store;","map":{"version":3,"sources":["/home/RENATA.RIBEIRO/Documents/GitHub/poin-ufba/react-app/src/redux/store/index.js"],"names":["createStore","applyMiddleware","compose","reducers","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","configureStore","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,MAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,SAASE,cAAT,CAAwBC,cAAxB,EAAwC;AAEtC,QAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAAxE;AACA,QAAMW,KAAK,GAAGb,WAAW,CAACG,QAAD,EAAWM,cAAX,EAA2BC,gBAAgB,CAClET,eAAe,CAAC,GAAGM,WAAJ,CADmD,CAA3C,CAAzB;AAIAD,EAAAA,cAAc,CAACQ,GAAf,CAAmBT,QAAnB;;AAEA,MAAIU,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,EAAuC,MAAM;AAC3C,YAAMC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOL,KAAP;AACD;;AAED,MAAMA,KAAK,GAAGL,cAAc,EAA5B;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport reducers from \"../reducers\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport rootSaga from \"../sagas/index\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst middlewares = [sagaMiddleware];\r\n\r\nfunction configureStore(preloadedState) {\r\n \r\n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n  const store = createStore(reducers, preloadedState, composeEnhancers(\r\n    applyMiddleware(...middlewares)\r\n  ));\r\n\r\n  sagaMiddleware.run(rootSaga);\r\n\r\n  if (module.hot) {\r\n    module.hot.accept(\"../reducers/index\", () => {\r\n      const nextRootReducer = require(\"../reducers/index\");\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n\r\n"]},"metadata":{},"sourceType":"module"}